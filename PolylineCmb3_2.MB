'====================================================================================================================	'
' Programmer:       John Worrall																									'
' Last Update:      17/01/2012																								'
'																																		'	
' Description:    																													'
'  - Combines polylines with the same node at start and end																	'									'
																																		'
																																		'
' Furture Works - Combined sub functions 																							'
'               - Option for user entry or select of files to process												    	'
' Bugs 		 																									   				 '
'====================================================================================================================	'
'
'                      .         .                           
'8888888 8888888888   ,8.       ,8.          8 888888888o.   
'      8 8888        ,888.     ,888.         8 8888    `88.  
'      8 8888       .`8888.   .`8888.        8 8888     `88  
'      8 8888      ,8.`8888. ,8.`8888.       8 8888     ,88  
'      8 8888     ,8'8.`8888,8^8.`8888.      8 8888.   ,88'  
'      8 8888    ,8' `8.`8888' `8.`8888.     8 888888888P'   
'      8 8888   ,8'   `8.`88'   `8.`8888.    8 8888`8b       
'      8 8888  ,8'     `8.`'     `8.`8888.   8 8888 `8b.     
'      8 8888 ,8'       `8        `8.`8888.  8 8888   `8b.   
'      8 8888,8'         `         `8.`8888. 8 8888     `88. 

'                                                                                                                                                                                                                       
'     ,o888888o.    8 8888888888       ,o888888o.       d888888o.   8 888888888o 8888888 8888888888   .8.           8 8888 8 8888                   8888888 8888888888 8 8888888888       ,o888888o.    8 8888        8 
'    8888     `88.  8 8888          . 8888     `88.   .`8888:' `88. 8 8888    `88.     8 8888        .888.          8 8888 8 8888                         8 8888       8 8888            8888     `88.  8 8888        8 
' ,8 8888       `8. 8 8888         ,8 8888       `8b  8.`8888.   Y8 8 8888     `88     8 8888       :88888.         8 8888 8 8888                         8 8888       8 8888         ,8 8888       `8. 8 8888        8 
' 88 8888           8 8888         88 8888        `8b `8.`8888.     8 8888     ,88     8 8888      . `88888.        8 8888 8 8888                         8 8888       8 8888         88 8888           8 8888        8 
' 88 8888           8 888888888888 88 8888         88  `8.`8888.    8 8888.   ,88'     8 8888     .8. `88888.       8 8888 8 8888                         8 8888       8 888888888888 88 8888           8 8888        8 
' 88 8888           8 8888         88 8888         88   `8.`8888.   8 888888888P'      8 8888    .8`8. `88888.      8 8888 8 8888                         8 8888       8 8888         88 8888           8 8888        8 
' 88 8888   8888888 8 8888         88 8888        ,8P    `8.`8888.  8 8888             8 8888   .8' `8. `88888.     8 8888 8 8888                         8 8888       8 8888         88 8888           8 8888888888888 
' `8 8888       .8' 8 8888         `8 8888       ,8P 8b   `8.`8888. 8 8888             8 8888  .8'   `8. `88888.    8 8888 8 8888                         8 8888       8 8888         `8 8888       .8' 8 8888        8 
'    8888     ,88'  8 8888          ` 8888     ,88'  `8b.  ;8.`8888 8 8888             8 8888 .888888888. `88888.   8 8888 8 8888                         8 8888       8 8888            8888     ,88'  8 8888        8 
'     `8888888P'    8 888888888888     `8888888P'     `Y8888P ,88P' 8 8888             8 8888.8'       `8. `88888.  8 8888 8 888888888888                 8 8888       8 888888888888     `8888888P'    8 8888        8 
'
'
'================================================================================================================='


'*********************Library*********************************************
Include "mapbasic.def"

'*********************Global Variables************************************
Global EditTable As String
Global EditTableLocation As String
Global ApplicationFolder As String
Global HardDriveFolder As String


Declare Sub Main

Sub Main
Print Chr$(12)

ApplicationFolder = ApplicationDirectory$()
HardDriveFolder = "C:\TEMP\"
EditTable = "PolylineCmb"
EditTableLocation = HardDriveFolder+"PolylineCmb"


'Check and clear any left data from previous runs...
Dim s_Worm,e_Worm As Float
Dim x_searchfor,users_ans As Integer
Dim users_TB As String 'Road to search for   Delete
Dim FirstDialogAn As SmallInt
Dim TableCnt,IVar As Integer
Dim OpenTableNs() As String
Dim CmbObject As Object
Dim UserBrowsePathFnl As String,ChosenTblNm As String
Dim ChosenTblID As Integer
Dim TableColmn() As String
Dim JVar, ColmCnt As Integer
Dim i As Integer
Dim j As Integer
Dim k As Integer
Dim l As Integer

TableCnt = NumTables()

'Check if table PolylineCmb is open current mapper
For IVar = 1 To TableCnt
	'Print TableInfo(IVar,TAB_INFO_NAME)
	If (TableInfo(IVar,TAB_INFO_NAME) = EditTable ) Then
	Close Table PolylineCmb
	End If
Next

'Checks for previous created tables and delete
If FileExists(EditTableLocation+".TAB") Then
	Kill "C:\TEMP\PolylineCmb.TAB"
	Kill "C:\TEMP\PolylineCmb.ID"
	Kill "C:\TEMP\PolylineCmb.MAP"
	Kill "C:\TEMP\PolylineCmb.DAT"
End If


'Create new table to do edits
Create Table EditTable
( townname Char(30) )
	File EditTableLocation+".tab"
Create Map For EditTable
Open Table EditTableLocation+".TAB" Interactive


'*********************Dialog Box************************************

'Inquire and set variables based on current mapper
TableCnt = NumTables()
ReDim OpenTableNs(TableCnt)
For IVar = 1 To TableCnt
OpenTableNs(IVar) = TableInfo(IVar,TAB_INFO_NAME)
'Print OpenTableNs(IVar)
Next

Dim ColRdID,ColSCHID,ColECHID As Integer

Dialog
Title "Select Table for Polyline Combine"
Control StaticText ID 2001 Title "Table to process:" Position 15, 20
Control ListBox Title From Variable OpenTableNs Into IVar ID 2003 Width 180 Position 80,20 Value 1 Into ColRdID

Control OKButton Position 280,120
Control CancelButton Position 325,120
Control GroupBox Title "Table Select"Position 5,2 Width 370 Height 150
If CommandInfo(CMD_INFO_DLG_OK)Then


'*********************Geoprocessing************************************

' Count on SelTable attributes
i = 0 
	Fetch First From OpenTableNs(ColRdID)
		Do While Not EOT(OpenTableNs(ColRdID))
			i = i + 1 
			Fetch Next From OpenTableNs(ColRdID)
		Loop 

Print "Number of records in table "+OpenTableNs(ColRdID)+" is: " + i 


'Objects to compare
Dim TestA,TestB as Object
Dim LineObjectClac As Object
Dim LineObjectClacCmb As Object
Dim PreviousLineCheck As Logical

Dim AddObjectFirst As Logical
Dim AddObjectSecondL As Logical
AddObjectFirst = False
AddObjectSecondL = False

Dim ObjectArray(100) As Object
Dim ArrayCounter As Integer
ArrayCounter =1

PreviousLineCheck = True

Dim ObjectJ As Object
Dim ObjectK As Object
Dim ObjectL As Object

Dim ObjectIntJK As Object

Dim ObjectIntKL As Object
Dim ObjectIntJL As Object
Dim ObjectIntJKL As Object

Dim OverlapNodes As Object


For j=1 to i	'First loop - J
				For k=1 to i 	'Second loop - k
					
					Select * from OpenTableNs(ColRdID) where RowID = j Into SelectionJ
					Select * from OpenTableNs(ColRdID) where RowID = k Into SelectionK
																																		
					ObjectJ = SelectionJ.obj
					ObjectK = SelectionK.obj
					ObjectIntJK = IntersectNodes(ObjectJ, ObjectK, INCL_ALL )
					
					
					Print "LINE INTERSECTION NODES"+IntersectNodes(ObjectJ, ObjectK, INCL_ALL ) +"    "+J+"j"+k+"k"
					Print "NODE COUNT"+ ObjectInfo(ObjectIntJK ,OBJ_INFO_NPNTS)

					
					
							    If k = 1 Then 'Initialise variables for K Loop (1-1)	
							   		Print "---------------------------------------------------------------------------------------------"'Debug
							   		Print "1-1"  'Debug
									Print "Counter    J:"+j+"  K:"+k  'Debug
									
									'Sets the CmbObject to atleast have Jloops.obj
								 	CmbObject = ObjectJ	
							    End If					
					
								If j <> k and j =1 Then 'Check condition for j first loop & all of K that does not equl J (1-2,1-3,1-4 etc )
									Print "Counter    J:"+j+"  K:"+k  'Debug
					
										
										'OverlapNodes = Overlap(ObjectJ,ObjectK)
										OverlapNodes = IntersectNodes(ObjectJ,ObjectK,INCL_COMMON)
										
										Print "OVERLAP NODE COUNT   *** "+ObjectInfo(OverlapNodes ,OBJ_INFO_NPNTS)
										Print "ADD COMBINED OBJECT"
												If ObjectInfo(OverlapNodes ,OBJ_INFO_NPNTS) = 2 Then
													Insert Into PolylineCmb (Obj) 
									    			Values(OverlapNodes)
									    			AddObjectFirst = False
												End If
										
										'Insert Into PolylineCmb (Obj) 
									    'Values(OverlapNodes)
									    'AddObjectFirst = False
										
										
					
										'Checks results combine objects for nodes to see if there is an intersect result
										If ObjectInfo(ObjectIntJK ,OBJ_INFO_NPNTS) > 0 Then
							
														Print "Intersects J1"
														CmbObject = Combine(CmbObject,ObjectK) ' Combine Objects
														AddObjectFirst = True
										End If	

								ElseIf j <> k and j >1 Then	'Check condition for j loop <> 1 & all of K that does not equl J (2-1,2-3,2-4 & 3-1,3-2,3-4,3-4 etc )
													
												' Checks no intersection with previous lines
												For l=j-1 to 1 Step -1	'Runs back from current row
																	
																Select * from OpenTableNs(ColRdID) where RowID = l Into SelectionL
																
																ObjectL = SelectionL.obj
																ObjectIntKL = Combine(ObjectK, ObjectL )
																ObjectIntJL = Combine(ObjectJ, ObjectL )	
																ObjectIntJKL = Combine(ObjectIntJK, ObjectL )
																
																If l =j-1 Then
																AddObjectSecondL = False
																Print "**************************************"'Debug
																End If
																
																Print "J: "+J+"     K: "+ k +"     L: "+l 'Debug	

																'If ObjectInfo(ObjectIntJK,OBJ_INFO_NPNTS) > 0  Then  	
																'	
																'				If ObjectInfo(ObjectIntJKL	
																'	
																'End If			
																			
																			
																			
																			
																			If ObjectInfo(ObjectIntJL ,OBJ_INFO_NPNTS) > 0 Then
																				Print "Intersects J&L  "+"j"+j+"l"+l
																				End If
'																											'Checks to see if lines intersect previous values
																											If ObjectInfo(ObjectIntKL ,OBJ_INFO_NPNTS) > 0 Then
																											Print "Intersects K&L  "+"k"+k+"l"+l
																											PreviousLineCheck = True ' Sets False
																											End If					
																	
																	Next
																					If PreviousLineCheck = False Then
																					Print "interesction5"
																				    CmbObject = Combine(CmbObject,TestB) ' Combine Objects
																					End If
																					PreviousLineCheck = True												
												
													
								End If	
								
								'Append combined lines objects at the end of K loop, from the first loop
								'If k =i and AddObjectFirst = True Then
								'	Print "ADD COMBINED OBJECT"
								'	Insert Into PolylineCmb (Obj) 
								'	Values(CmbObject)
								'	AddObjectFirst = False
									
								'End If
			
				Next
If j=2 then
	Exit Sub
End If
Next



End If
Exit Sub


'---------------------- Run Selected table rows

' Check objects nodes of polylines of same nodes
Dim j1,k1 as Integer
j1 = 0
k1 = 0
j = 1
k = 1

'First loop - J
For j=1 to i

'Second loop -K
For k=1 to i

Print "J-loop:"+J+"  K-loop:"+K+"     ------ COUNTER"   

'Select statement here
If j <> k Then

'Fetch Rec j From OpenTableNs(ColRdID) Into SelectionA
'Fetch Rec i From OpenTableNs(ColRdID) Into SelectionB


'Saves Objects A&B to compare
Select * from OpenTableNs(ColRdID) where RowID = j Into SelectionA
TestA = SelectionA.obj
Select * from OpenTableNs(ColRdID) where RowID = k Into SelectionB
TestB = SelectionB.obj
'Select * from SelectionA,SelectionB where SelectionA.Obj Intersects SelectionB.Obj Into SelectionResults

'Saves polyline object of end pont of segements
'LineObjectClac= IntersectNodesIntersectNodes(TestA, TestB, INCL_ALL )

'If there are nodes in the create polyine 
If ObjectInfo(LineObjectClac ,OBJ_INFO_NPNTS) > 0 Then

'Test here so the same line objects are not repeated twice
	If j1 <> k and k1 <> j then
	Print "Trigger - Objects are not repeated"

	CmbObject = Combine(TestA,TestB)
	Insert Into PolylineCmb (Obj) 
	Values(CmbObject)

	j1 = j
	k1 = k
	End If

End If

'exit sub

Print J+"J"
Print K+"K"
Print ObjectInfo(TestA ,OBJ_INFO_NPNTS)+"POINT A"
Print ObjectInfo(TestB ,OBJ_INFO_NPNTS)+"POINT B"

Dim IntsecObj as Object
IntsecObj = IntersectNodes( TestA, TestB,INCL_CROSSINGS)

Print ObjectInfo(IntsecObj,OBJ_INFO_NPNTS)



'Select where TestA Intersects TestB Into SelectionResults
'Select * from OpenTableNs(ColRdID) where RowID = j Intersects Select * from OpenTableNs(ColRdID) where RowID = k into Test

End If

Next

Next

Close Table SelectionA 
Close Table SelectionB 
commit table PolylineCmb
'Else
'End If

End Sub



